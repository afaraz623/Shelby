ARM GAS  /tmp/ccu7SNfV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB131:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "gpio.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  /tmp/ccu7SNfV.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /**
  60:Core/Src/main.c ****   * @brief  The application entry point.
  61:Core/Src/main.c ****   * @retval int
  62:Core/Src/main.c ****   */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief System Clock Configuration
  66:Core/Src/main.c ****   * @retval None
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** void SystemClock_Config(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  71:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  74:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  77:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  78:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  79:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  80:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  81:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  82:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  83:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  84:Core/Src/main.c ****   {
  85:Core/Src/main.c ****     Error_Handler();
  86:Core/Src/main.c ****   }
  87:Core/Src/main.c **** 
ARM GAS  /tmp/ccu7SNfV.s 			page 3


  88:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
  89:Core/Src/main.c ****   */
  90:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  91:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  92:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  93:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  94:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  95:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     Error_Handler();
 100:Core/Src/main.c ****   }
 101:Core/Src/main.c **** }
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END 4 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /**
 108:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 109:Core/Src/main.c ****   * @retval None
 110:Core/Src/main.c ****   */
 111:Core/Src/main.c **** void Error_Handler(void)
 112:Core/Src/main.c **** {
  29              		.loc 1 112 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 113:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 114:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 115:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 115 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/ccu7SNfV.s 			page 4


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /tmp/ccu7SNfV.s 			page 5


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccu7SNfV.s 			page 6


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 116:Core/Src/main.c ****   while (1)
  51              		.loc 1 116 3 discriminator 1 view .LVU4
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c ****   }
  52              		.loc 1 118 3 discriminator 1 view .LVU5
 116:Core/Src/main.c ****   while (1)
  53              		.loc 1 116 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE131:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB130:
  69:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 69 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 64
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 91B0     		sub	sp, sp, #68
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 72
  70:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 70 3 view .LVU8
  70:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 70 22 is_stmt 0 view .LVU9
  80 0004 2822     		movs	r2, #40
  81 0006 0021     		movs	r1, #0
ARM GAS  /tmp/ccu7SNfV.s 			page 7


  82 0008 06A8     		add	r0, sp, #24
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
  71:Core/Src/main.c **** 
  85              		.loc 1 71 3 is_stmt 1 view .LVU10
  71:Core/Src/main.c **** 
  86              		.loc 1 71 22 is_stmt 0 view .LVU11
  87 000e 0023     		movs	r3, #0
  88 0010 0193     		str	r3, [sp, #4]
  89 0012 0293     		str	r3, [sp, #8]
  90 0014 0393     		str	r3, [sp, #12]
  91 0016 0493     		str	r3, [sp, #16]
  92 0018 0593     		str	r3, [sp, #20]
  76:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  93              		.loc 1 76 3 is_stmt 1 view .LVU12
  76:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  94              		.loc 1 76 36 is_stmt 0 view .LVU13
  95 001a 0123     		movs	r3, #1
  96 001c 0693     		str	r3, [sp, #24]
  77:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  97              		.loc 1 77 3 is_stmt 1 view .LVU14
  77:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  98              		.loc 1 77 30 is_stmt 0 view .LVU15
  99 001e 4FF4A022 		mov	r2, #327680
 100 0022 0792     		str	r2, [sp, #28]
  78:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 101              		.loc 1 78 3 is_stmt 1 view .LVU16
  79:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 102              		.loc 1 79 3 view .LVU17
  79:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 103              		.loc 1 79 30 is_stmt 0 view .LVU18
 104 0024 0A93     		str	r3, [sp, #40]
  80:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 105              		.loc 1 80 3 is_stmt 1 view .LVU19
  80:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 106              		.loc 1 80 34 is_stmt 0 view .LVU20
 107 0026 0223     		movs	r3, #2
 108 0028 0D93     		str	r3, [sp, #52]
  81:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 109              		.loc 1 81 3 is_stmt 1 view .LVU21
  81:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 110              		.loc 1 81 35 is_stmt 0 view .LVU22
 111 002a 4FF48033 		mov	r3, #65536
 112 002e 0E93     		str	r3, [sp, #56]
  82:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 113              		.loc 1 82 3 is_stmt 1 view .LVU23
  82:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 114              		.loc 1 82 32 is_stmt 0 view .LVU24
 115 0030 4FF4E013 		mov	r3, #1835008
 116 0034 0F93     		str	r3, [sp, #60]
  83:Core/Src/main.c ****   {
 117              		.loc 1 83 3 is_stmt 1 view .LVU25
  83:Core/Src/main.c ****   {
 118              		.loc 1 83 7 is_stmt 0 view .LVU26
 119 0036 06A8     		add	r0, sp, #24
 120 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 121              	.LVL1:
ARM GAS  /tmp/ccu7SNfV.s 			page 8


  83:Core/Src/main.c ****   {
 122              		.loc 1 83 6 view .LVU27
 123 003c 80B9     		cbnz	r0, .L7
  90:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 124              		.loc 1 90 3 is_stmt 1 view .LVU28
  90:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 125              		.loc 1 90 31 is_stmt 0 view .LVU29
 126 003e 0F23     		movs	r3, #15
 127 0040 0193     		str	r3, [sp, #4]
  92:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 128              		.loc 1 92 3 is_stmt 1 view .LVU30
  92:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 129              		.loc 1 92 34 is_stmt 0 view .LVU31
 130 0042 0221     		movs	r1, #2
 131 0044 0291     		str	r1, [sp, #8]
  93:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 132              		.loc 1 93 3 is_stmt 1 view .LVU32
  93:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 133              		.loc 1 93 35 is_stmt 0 view .LVU33
 134 0046 0023     		movs	r3, #0
 135 0048 0393     		str	r3, [sp, #12]
  94:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 136              		.loc 1 94 3 is_stmt 1 view .LVU34
  94:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 137              		.loc 1 94 36 is_stmt 0 view .LVU35
 138 004a 4FF48062 		mov	r2, #1024
 139 004e 0492     		str	r2, [sp, #16]
  95:Core/Src/main.c **** 
 140              		.loc 1 95 3 is_stmt 1 view .LVU36
  95:Core/Src/main.c **** 
 141              		.loc 1 95 36 is_stmt 0 view .LVU37
 142 0050 0593     		str	r3, [sp, #20]
  97:Core/Src/main.c ****   {
 143              		.loc 1 97 3 is_stmt 1 view .LVU38
  97:Core/Src/main.c ****   {
 144              		.loc 1 97 7 is_stmt 0 view .LVU39
 145 0052 01A8     		add	r0, sp, #4
 146 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 147              	.LVL2:
  97:Core/Src/main.c ****   {
 148              		.loc 1 97 6 view .LVU40
 149 0058 20B9     		cbnz	r0, .L8
 101:Core/Src/main.c **** 
 150              		.loc 1 101 1 view .LVU41
 151 005a 11B0     		add	sp, sp, #68
 152              	.LCFI2:
 153              		.cfi_remember_state
 154              		.cfi_def_cfa_offset 4
 155              		@ sp needed
 156 005c 5DF804FB 		ldr	pc, [sp], #4
 157              	.L7:
 158              	.LCFI3:
 159              		.cfi_restore_state
  85:Core/Src/main.c ****   }
 160              		.loc 1 85 5 is_stmt 1 view .LVU42
 161 0060 FFF7FEFF 		bl	Error_Handler
 162              	.LVL3:
ARM GAS  /tmp/ccu7SNfV.s 			page 9


 163              	.L8:
  99:Core/Src/main.c ****   }
 164              		.loc 1 99 5 view .LVU43
 165 0064 FFF7FEFF 		bl	Error_Handler
 166              	.LVL4:
 167              		.cfi_endproc
 168              	.LFE130:
 170              		.text
 171              	.Letext0:
 172              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 173              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 174              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 175              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 176              		.file 7 "<built-in>"
ARM GAS  /tmp/ccu7SNfV.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccu7SNfV.s:20     .text.Error_Handler:0000000000000000 $t
     /tmp/ccu7SNfV.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccu7SNfV.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccu7SNfV.s:65     .text.SystemClock_Config:0000000000000000 SystemClock_Config

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
